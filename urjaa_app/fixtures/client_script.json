[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.763352",
  "module": "Urjaa",
  "name": "Purchase Order - Custom",
  "script": "frappe.ui.form.on('Purchase Order', {\n\tonload_post_render: function(frm){\n\t    frm.page.remove_inner_button('Payment Request', 'Create')\n        frm.page.remove_inner_button('Subscription', 'Create')\n        frm.page.remove_inner_button('Purchase Receipt', 'Create')\n        },\n    onload:function(frm){\n            \n            cur_frm.set_df_property(\"schedule_date\", \"hidden\", 1)\n          \n\t       \n        },\n        \n    refresh: function(frm) {\n       \n\t\tfrm.set_query('item_code', 'items', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n           var a = \"Products\";\n            return{\n    \t\t\tfilters: {\n    \t\t\t  \n    \t\t\t  'has_variants': 1,\n    \t\t\t}\n            };\n\t    });\n\t}\n\n    \n});\n\n\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 0,
  "modified": "2023-02-22 15:53:08.165825",
  "module": "Urjaa",
  "name": "Get Data In Container & Set In Delivery note Chid",
  "script": "frappe.ui.form.on('Delivery Note Item', {\n\titem_code:function(frm) {\n\t    var a = frm.doc.conatiner_no;\n\t   \n\t\t$.each(frm.doc.items || [], function (i, d){\n\t\t   if(!d.container_no) d.container_no = a;\n\t\t   var item = d.item_code;\n\t\t   var container = d.container_no;\n\t\t   frappe.call({\n\t\t       method: \"fatch_data\",\n\t\t       args: {'item': item, 'con': container},\n\t\t   }).then(records => {\n\t\t       var qty = records[\"massge\"]\n\t\t     \n\t\t       if(!d.container_qty) d.container_qty = qty;\n\t\t   });\n\t\t});\n\t}\n\t    \n});\n\nfrappe.ui.form.on('Delivery Note', {\n    on_submit:function(frm){\n        $.each(frm.doc.items || [], function (i, d){\n            var con_qty = d.container_qty;\n            var qty = d.qty;\n            var aqty = con_qty - qty;\n            var item = d.item_code;\n            var cont = d.container_no;\n           \n            frappe.call({\n                method:\"set value\",\n                args: {'con_qty':aqty, 'item':item, 'conn':cont},\n            })\n        });\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2023-02-22 15:53:08.338810",
  "module": "Urjaa",
  "name": "Auto Credit Limit",
  "script": "frappe.ui.form.on('Customer', {\n\trefresh(frm) {\n\t    \n        var startDate;\n        var endDate;\n        var monthDiff;\n        var credit_limit=0;\n        \n\t\tfrm.add_custom_button(__('Auto Credit Limit'), function(){\n            \n\t\t    let d = new frappe.ui.Dialog({\n            title: 'Update credit limit',\n            fields: [\n                {\n                    label: 'From Date',\n                    fieldname: 'from date',\n                    fieldtype: 'Date'\n                }\n            ],\n            primary_action_label: 'Update',\n            primary_action(values) {\n                \n                const date = Object.values(values);\n                startDate = date[0];\n                \n                endDate = moment(new Date(), 'DD-MM-YYYY');\n                monthDiff = endDate.diff(startDate, 'months');\n                console.log('Month:' + monthDiff);\n    \n                frappe.db.get_list('Payment Entry', {\n                fields: ['paid_amount'],\n                filters: {\n                    party_type: 'Customer',\n                    party: frm.doc.name,\n                    party_name: frm.doc.customer_name,\n                    posting_date: ['>', startDate]\n                }\n                }).then(records => {\n                    for(let i=0; i<records.length;i++){\n                        credit_limit = credit_limit+parseInt(Object.values(records[i]));\n                    }\n                    credit_limit = credit_limit/monthDiff;\n                    console.log(\"credit_limit: \" +credit_limit);\n                    \n                    frm.clear_table('credit_limits');\n                    var row = frm.add_child(\"credit_limits\");\n                    row.credit_limit=credit_limit;\n                    frm.refresh_field(\"credit_limits\");\n\t\t\t\t\t\n                    alert('Credit limit amount '+ credit_limit + ' set for customer ' + frm.doc.name);\n                    credit_limit = 0;\n                });\n                \n                d.hide();\n            }\n        });\n        \n        d.show();\n        \n        });\n\t}\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2023-02-22 15:53:08.307931",
  "module": "Urjaa",
  "name": "Sop Skills For Employee",
  "script": "frappe.ui.form.on('Employee', {\n     designation: function(frm) {\n        frappe.call({\n\t\t\t\"method\": \"frappe.client.get\",\n\t\t\targs: {\n\t\t\t\tdoctype: \"Designation\",\n\t\t\t\tname: frm.doc.designation\n\t\t\t},\n\t\t\tcallback: function(data){\n\t\t\t\tfrm.clear_table('sop_list');\n\t\t\t\tlet design = data.message.skills;\n\t\t\t\tconsole.log(design);\n\t\t\t\tfor (var des in design) {\n\t\t\t\t\tvar row = frm.add_child(\"sop_list\");\n\t\t\t\t\trow.skill = design[des].skill;\n\t\t\t\t}\n\t\t\t\tfrm.refresh_field(\"skills\");\n\t\t\t}\n\t\t});\n\t\t\n    },\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2023-02-22 15:53:08.282020",
  "module": "Urjaa",
  "name": "Time Duration IN Purchase Order",
  "script": "\nfrappe.ui.form.on('Purchase Order', {\n  onload(frm){\n      var a=cur_frm.doc.posting_time\n                console.log(a)\n\n      if(a != null)\n      {\n          console.log(\"if\")\n      }\n      else{\n          console.log(\"else\")\n          var postime = frm.doc.posting_time;\n          var time= new Date();\n            var ptime=time.toLocaleTimeString();\n          frm.set_value('posting_time',ptime)\n          console.log(frm.doc.posting_time)\n      }\n      \n    \n  },\n  before_submit(frm) {\n    \n\t   if (frm.doc.posting_time !==''){\n\t     var postime = frm.doc.posting_time;\n\t     console.log(postime)\n\t     var stime=frm.doc.submit_time\n\t     var d = new Date();\n\t     var time=d.toLocaleTimeString();\n\t    frm.set_value('submit_time',time)\n    .then(() => {\n    console.log(time)\n   })\n   var timeStart = new Date(\"01/01/2007 \" + postime);\n   var timeEnd = new Date(\"01/01/2007 \" + time);\n   var difference = timeEnd - timeStart;             \n   var diff_result = new Date(difference);    \n   var dateString =\n    (\"0\" + diff_result.getUTCHours()).slice(-2) + \":\" +\n    (\"0\" + diff_result.getUTCMinutes()).slice(-2) + \":\" +\n    (\"0\" + diff_result.getUTCSeconds()).slice(-2);\n   \n   console.log(dateString)\n    frm.set_value('duration',dateString)\n    \n     frm.save(\"Submit\");\n        }\n\t}\n\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Custom Duty",
  "enabled": 1,
  "modified": "2023-02-22 15:53:08.109342",
  "module": "Urjaa",
  "name": "Calculate Amount and InrAmount & irnRate",
  "script": "frappe.ui.form.on('Custom Duty Child', {\n\tqty:function(frm) {\n\t    \n\t   var exrate = frm.doc.conversion_rate;\n\t  \n\t    $.each(frm.doc.items || [], function (i, d){\n\t       var qty = d.qty;\n\t       var rate = d.rate;\n\t       var a = qty * rate;\n\t       \n\t       d.amount = a;\n\t       \n\t       \n\t       var inrrate = rate * exrate;\n\t       var inramount = d.amount * exrate;\n\t       \n\t       \n\t       d.base_rate = inrrate;\n\t       d.base_amount = inramount;\n\t       frm.refresh_fields(\"items\");\n\t    });\n\t    \n\n\t},\n\trate:function(frm){\n\t\n\t    var exrate = frm.doc.conversion_rate;\n\t     \n\t    $.each(frm.doc.items || [], function (i, d){\n\t       var qty = d.qty;\n\t       var rate = d.rate;\n\t       var a = qty * rate;\n\t       \n\t       d.amount = a;\n\t       \n\t       \n\t       var inrrate = rate * exrate;\n\t       var inramount = d.amount * exrate;\n\t       \n\t       \n\t       d.base_rate = inrrate;\n\t       d.base_amount = inramount;\n\t       frm.refresh_fields(\"items\");\n\t    });\n\t   \n\t},\n\n});\n\n\n\n   \n  ",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Custom Duty",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.514828",
  "module": "Urjaa",
  "name": "Calculate Total avg & Tax",
  "script": "frappe.ui.form.on('Custom Duty', {\n\tbefore_save:function(frm) {\n\t    var totalqty = frm.doc.total_qty;\n\t\tvar sline = frm.doc.sline;\n\t\tvar cha = frm.doc.cha;\n\t\tvar cfs = frm.doc.cfs;\n\t\tvar tpt = frm.doc.tpt;\n\t\n\t\t var avg_total = 0;\n\t\t \n\t\t$.each(frm.doc.items || [], function (i, d){\n\t\t   var itemqty = d.qty;\n\t\t   var csline = (sline/totalqty)*itemqty;\n\t\t   var ccha = (cha/totalqty)*itemqty;\n\t\t   var ccfs = (cfs/totalqty)*itemqty;\n\t\t   var ctpt = ((tpt/totalqty)*itemqty)+itemqty+itemqty+itemqty;\n\t\t  \n\t\t   if(!d.sline) d.sline = csline;\n\t\t   if(!d.cha) d.cha = ccha;\n\t\t   if(!d.cfs) d.cfs = ccfs;\n\t\t   if(!d.tpt) d.tpt = ctpt;\n\t\t   \n\t\t   var amount = d.base_amount;\n\t\t   \n\t\t   var tax5 = amount / 100 * 5;\n\t\t   var tax10 = tax5 / 100 * 10;\n\t\t   var tax12 = (amount+tax5+tax10)/100*12;\n\t\t   var duty = tax5+tax10+tax12;\n\t\t   \n\t\t   if(!d.tax_5) d.tax_5 = tax5;\n\t\t   if(!d.tax_calculate)d.tax_calculate = tax10;\n\t\t   if(!d.tax_12) d.tax_12 = tax12;\n\t\t   if(!d.total_duty) d.total_duty = duty;\n\t\t   \n\t\t   \n\t\t   var app_cost = (duty+csline+ccha+ccfs+ctpt+amount)/itemqty;\n\t\t   if(!d.approx_costing) d.approx_costing = app_cost;\n\t\t   \n\t\t   var avg = itemqty * app_cost;\n\t\t   if(!d.approx_costing_avg) d.approx_costing_avg =avg;\n\t\t   \n\t\t   avg_total += d.approx_costing_avg;\n\t\t   \n\t\t});\n\t\t\n\t\tfrm.set_value(\"avg_cost_total\",avg_total);\n        var h = avg_total / totalqty;\n        frm.set_value(\"avg_cost\", h);\n      \n       \n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Custom Duty",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.489947",
  "module": "Urjaa",
  "name": "Calculate Total amount, qty, amount(INR), Avg",
  "script": "frappe.ui.form.on('Custom Duty Child', {\n\tqty:function(frm) {\n\t\tvar total_qty = 0;\n\t\tvar total = 0;\n\t    var inrtotal = 0;\n\t\t$.each(frm.doc.items, function(i, d) {\n\t\t    if(d.qty == undefined)\n\t\t    {\n\t\t        \n\t\t    }\n\t\t    else{\n\t\t    total_qty += d.qty;\n\t\t    total += d.amount;\n\t        inrtotal += d.base_amount;\n\t\t    }\n\t\t    \n\t\t});\n\t\t\n\t\tfrm.set_value(\"total_qty\",total_qty);\n\t\tfrm.set_value(\"total\", total);\n\t    frm.set_value(\"base_total\", inrtotal);\n\t    frm.refresh_field(\"total_qty\");\n\t    frm.refresh_field(\"total\");\n\t    frm.refresh_field(\"base_total\");\n\t},\n\trate:function(frm){\n\t    \n\t    var total = 0;\n\t    var inrtotal = 0;\n\t    $.each(frm.doc.items || [], function(i,d){\n\t        if(d.rate == undefined)\n\t\t    {\n\t\t        \n\t\t    }\n\t\t    else{\n\t        total += d.amount;\n\t        inrtotal += d.base_amount;\n\t\t    }\n\t    });\n\t    frm.set_value(\"total\", total);\n\t    frm.set_value(\"base_total\", inrtotal);\n\t    frm.refresh_field(\"total\");\n\t    frm.refresh_field(\"base_total\");\n\t   \n\t}\n});\n\n\n\nfrappe.ui.form.on(\"Custom Duty\",{\n    conversion_rate:function(frm){\n        var ex_rate = frm.doc.conversion_rate;\n        var amount1 = 0;\n        $.each(frm.doc.items || [], function(i,d){\n           if(d.rate == undefined)\n            {\n                \n            }\n            else{\n                var rate = d.rate;\n    \t        var amount = d.amount;\n    \t       \n    \t       \n    \t       var inrrate = rate * ex_rate;\n    \t       var inramount = d.amount * ex_rate;\n    \t       \n    \t       d.base_rate = inrrate;\n    \t       d.base_amount = inramount;\n    \t       frm.refresh_fields(\"items\");\n    \t        amount1 += d.amount\n            }\n                \n        })\n        \n        var total_inr = amount1 * ex_rate;\n        frm.set_value(\"base_total\",total_inr);\n        frm.refresh_field(\"base_total\");\n        \n    }\n})\n\n\n\n\n\n\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-02-22 15:53:08.253005",
  "module": "Urjaa",
  "name": "CSS",
  "script": "frappe.ui.form.on('Supplier', {\n\trefresh(frm) {\n\t\tvar element = document.querySelectorAll(\".form-section\")[2];\n\t\telement.classList.add(\"section-no\");\n\t\tset_css(frm); \n\t}\n});\nfunction set_css(frm){\n\tconsole.log(\"set_css\");\n    document.querySelectorAll(\"[data-fieldname = 'call4']\")[1].style.backgroundColor = '#0275d8';\n    document.querySelectorAll(\"[data-fieldname = 'call4']\")[1].style.marginTop = '35px';\n\tdocument.querySelectorAll(\"[data-fieldname = 'call4']\")[1].style.color = '#fff';\n\n\tdocument.querySelectorAll(\"[data-fieldname = 'call1']\")[1].style.backgroundColor = '#0275d8';\n    document.querySelectorAll(\"[data-fieldname = 'call1']\")[1].style.marginTop = '25px';\n\tdocument.querySelectorAll(\"[data-fieldname = 'call1']\")[1].style.color = '#fff';\n\t\n\tdocument.querySelectorAll(\"[data-fieldname = 'call2']\")[1].style.backgroundColor = '#0275d8';\n    document.querySelectorAll(\"[data-fieldname = 'call2']\")[1].style.marginTop = '35px';\n\tdocument.querySelectorAll(\"[data-fieldname = 'call2']\")[1].style.color = '#fff';\n\t\n\tdocument.querySelectorAll(\"[data-fieldname = 'call3']\")[1].style.backgroundColor = '#0275d8';\n    document.querySelectorAll(\"[data-fieldname = 'call3']\")[1].style.marginTop = '25px';\n\tdocument.querySelectorAll(\"[data-fieldname = 'call3']\")[1].style.color = '#fff';\n\n\tconsole.log(\"hello end css\");\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2023-02-22 15:53:08.224472",
  "module": "Urjaa",
  "name": "Customer CSS",
  "script": "frappe.ui.form.on('Customer', {\n\trefresh(frm) {\n\t\tvar element = document.querySelectorAll(\".form-section\")[2];\n\t\telement.classList.add(\"section-no\");\n\t\tset_css(frm); \n\t},\n// \tcall1:function(frm){\n// \t\tvar no = cur_frm.doc.mobile_number;\n// \t\tclick_call(frm,no);\n// \t},\n});\n// function click_call(frm,no){\n    \n// \tif(no==null)\n// \t{\n// \t\tfrappe.msgprint(\"you Don't Have Phone Number so you can't connect call\",'Error')\t\t\n//     }\n// \telse\n// \t{\n// \t\tvar user = frappe.session.user_email;\n//         console.log(user)\n//         console.log(\"Number Fetched\", no)\n// \t\t\tfrappe.call({\n// \t\t\t\tmethod: \"user_number\",\n// \t\t\t\targs: { 'user_number': user }\n// \t\t\t}).then(records => {\n// \t\t\t\tvar num = records[\"message\"];\n//                 console.log(\"Hello This is Number of User Login:\", num)\n// \t\t\t\tvar agent_number = num\t\n// \t\t\t\t\t\tfrappe.confirm(\n// \t\t\t\t\t\t\t\"Are you sure want To Call?\",\t\t\t\t\n// \t\t\t\t\t\tfunction(){\n// \t\t\t\t\t\tfrappe.call({\n// \t\t\t\t\t\t\tmethod:\"urja_app.api.final_api\", \n// \t\t\t\t\t\t\targs: {'agent_number':agent_number,'destination_number':no},\n// \t\t\t\t\t\t\tcallback: function(r) {\n//                                 console.log(r)\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t});\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\t)\n// \t\t\t\t\t})\n// \t\t}\n// }\nfunction set_css(frm){\n\tconsole.log(\"set_css\");\n    document.querySelectorAll(\"[data-fieldname = 'call4']\")[1].style.backgroundColor = '#0275d8';\n    document.querySelectorAll(\"[data-fieldname = 'call4']\")[1].style.marginTop = '35px';\n\tdocument.querySelectorAll(\"[data-fieldname = 'call4']\")[1].style.color = '#fff';\n\n\tdocument.querySelectorAll(\"[data-fieldname = 'call1']\")[1].style.backgroundColor = '#0275d8';\n    document.querySelectorAll(\"[data-fieldname = 'call1']\")[1].style.marginTop = '25px';\n\tdocument.querySelectorAll(\"[data-fieldname = 'call1']\")[1].style.color = '#fff';\n\t\n\tdocument.querySelectorAll(\"[data-fieldname = 'call2']\")[1].style.backgroundColor = '#0275d8';\n    document.querySelectorAll(\"[data-fieldname = 'call2']\")[1].style.marginTop = '35px';\n\tdocument.querySelectorAll(\"[data-fieldname = 'call2']\")[1].style.color = '#fff';\n\t\n\tdocument.querySelectorAll(\"[data-fieldname = 'call3']\")[1].style.backgroundColor = '#0275d8';\n    document.querySelectorAll(\"[data-fieldname = 'call3']\")[1].style.marginTop = '25px';\n\tdocument.querySelectorAll(\"[data-fieldname = 'call3']\")[1].style.color = '#fff';\n\t\n\tconsole.log(\"hello end css\");\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 0,
  "modified": "2023-02-22 15:53:08.134398",
  "module": "Urjaa",
  "name": "Naming Series For Expense Bill",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\t\tonload(frm) {\n            if (frm.doc.purchase_or_expense == 'Expense Bill'){\n                frm.set_value('naming_series','EXP-.YY.-');\n            }\n            else\n            {\n                frm.set_value('naming_series','PINV-.YY.-');\n            }\n\t    },\n\t    purchase_or_expense(frm) {\n            if (frm.doc.purchase_or_expense == 'Expense Bill'){\n                frm.set_value('naming_series','EXP-.YY.-');\n            }\n            else\n            {\n                frm.set_value('naming_series','PINV-.YY.-');\n            }\n\t    }\n});\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Custom Duty",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.540815",
  "module": "Urjaa",
  "name": "Auto Fatch Data From Purchase Order To Custom Duty",
  "script": "frappe.ui.form.on('Custom Duty', {\n    port_name:function(frm) {\n\t\tvar name = frm.doc.port_name;\n\t\tfrappe.call({\n\t\t    method:\"get port data\",\n\t\t    args:{'name':name}\n\t\t}).then (records =>{\n\t\t    var s_line = records[\"s_line\"];\n\t\t    var cha = records[\"cha\"];\n\t\t    var cfs = records[\"cfs\"];\n\t\t    var tpt = records[\"tpt\"];\n\t\t    \n\t\t    \n\t\t    frm.set_value('sline',s_line);\n\t\t    frm.set_value('cha',cha);\n\t\t    frm.set_value('cfs',cfs);\n\t\t    frm.set_value('tpt',tpt);\n\t\t});\n\t},\n    \n    \n    day:function(frm){\n\t    var a = frm.doc.day;\n\t    frm.set_value(\"surat_delivery_date\",frappe.datetime.add_days(frm.doc.nsa_etd, a));\n\t},\n    \n    \n    purchase_order_no: function (frm) {\n        var a = frm.doc.purchase_order_no\n\n        frappe.call({\n            \"method\": \"get data in custom duty\",\n            args: {\n                \"name\": a\n            },\n        }).then(records => {\n            var all_items = records[\"data1\"]\n            all_items.forEach(function (item) {\n                var d = frm.add_child(\"items\");\n                d.item_code = item[0];\n                d.item_template = item[1];\n                frm.refresh_field(\"items\");\n            });\n        })\n    },\n\n\t\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "modified": "2023-02-22 15:53:08.194675",
  "module": "Urjaa",
  "name": "Auto Create Box Trackin form On purchase Receipt Save",
  "script": "frappe.ui.form.on('Purchase Receipt', {\n\tafter_save:function(frm) {\n\t    \n\t\tvar piname = frm.doc.purchase_invoice_no;\n\t\t\n\t    var purchase_recipt = frm.doc.name;\n\t   \n\t\tvar supplerr = frm.doc.supplier;\n\t\t$.each(frm.doc.items || [], function(i, d){\n\t\t    frappe.call({\n\t\t        method:\"dataset\",\n\t\t        args:{'piname':piname, 'prname':purchase_recipt,  's_name':supplerr},\n\t\t    });\n\t\t});\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.967383",
  "module": "Urjaa",
  "name": "Delivery note fatch box no wise qty & Lot No",
  "script": "frappe.ui.form.on('Delivery Note', {\n\t// \trefresh:function(frm) {\n\t// \t  frm.set_query('box_no', 'items', function(doc, cdt, cdn) {\n\t// \t        var a = frm.doc.container_no;\n\t//             let d = locals[cdt][cdn];\n\t//             return{\n\t//     \t\t\tfilters: {\n\t//     \t\t\t    'parent' : a,\n\t//     \t\t\t    'lot_no': d.lot_no, \n\t//     \t\t\t}\n\t//             };\n\t// \t    });\n\t// \t},\n\tafter_save: function (frm) {\n\t\t$.each(frm.doc.items || [], function (i, d) {\n\t\t\tvar box = d.box_no;\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"changvalue\",\n\t\t\t\targs: { \"box\": box }\n\t\t\t});\n\t\t});\n\t},\n\n\tcustom_barcode: function (frm) {\n\t\tvar a = frm.doc.custom_barcode;\n\t\t$.each(frm.doc.items || [], function (i, d) {\n\t\t\tvar item = d.item_code;\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"get data\",\n\t\t\t\targs: { 'box': a }\n\t\t\t}).then(records => {\n\n\n\t\t\t\tvar boxitem = records[\"item\"];\n\t\t\t\tvar box_no1 = records[\"box_no\"];\n\t\t\t\tvar qty = records[\"qty\"];\n\t\t\t\tvar lot_no = records[\"lotno\"];\n                if( qty != \"0.0\"){\n\t\t\t\tif (item == boxitem ) {\n\t\t\t\t\tif (!d.box_no) {\n\t\t\t\t\t\td.box_no = box_no1;\n\t\t\t\t\t\td.qty = qty;\n\t\t\t\t\t\td.lot_no = lot_no;\n\t\t\t\t\t\tfrm.refresh_fields(\"items\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar box_no = d.box_no;\n\t\t\t\t\t\tif (box_no.match(box_no1)) {\n\t\t\t\t\t\t\talert(\"Box No Already Scan\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbox_no1 = box_no1 + \"\\n\" + d.box_no;\n\t\t\t\t\t\t\td.box_no = box_no1;\n\n\t\t\t\t\t\t\tvar qty1 = parseFloat(qty) + parseFloat(d.qty);\n\t\t\t\t\t\t\td.qty = qty1;\n\n\t\t\t\t\t\t\tlot_no = lot_no + \"\\n\" + d.lot_no;\n\t\t\t\t\t\t\td.lot_no = lot_no;\n\n\t\t\t\t\t\t\tfrm.refresh_fields(\"items\");\n\t\t\t\t\t\t}\n\t\t\t\t\t    }\n\t\t\t\t    }\n                }\n\t\t\t\telse{\n\t\t\t\t    alert(\"Quantity Not Availble\")\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\t}\n});\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2023-02-22 15:53:08.052169",
  "module": "Urjaa",
  "name": "Some Link Hiide and Some Validatesions",
  "script": "frappe.ui.form.on('Purchase Invoice', { \n    validate:function(frm) {\n        var type = frm.doc.book_selection;\n        if(type == \"Import\")\n        {\n            var a = String(frm.doc.boe_no);\n            var b = a.length;\n            \n            if (b != 7){\n                frappe.msgprint(__(\"Enter a valid BOE No\"));\n                frappe.validated = false;\n                }\n            else{\n                frappe.validated = true;\n            }\n        }\n    },\n    \n    \n    onload_post_render: function(frm){                      \n        frm.page.remove_inner_button('Payment Request', 'Create')\n        frm.page.remove_inner_button('Block Invoice', 'Create')\n        // frm.page.remove_inner_button('Return / Debit Note', 'Create')\n        frm.page.remove_inner_button('Subscription', 'Create')\n        frm.page.remove_inner_button('Purchase Receipt', 'Create')\n        \n    },\n    \n    \n    before_save:function(frm){\n        var ex_rate = frm.doc.conversion_rate;\n        frm.set_value(\"ex_rate\",ex_rate)\n        \n        \n        var total = frm.doc.base_total;\n        var pr5 = (total/100)*5;\n        frm.set_value(\"bcd_5\",pr5);\n        var pr10 = (pr5/100)*10;\n        frm.set_value(\"sws_10\",pr10);\n        \n        var d_p = pr5 + pr10;\n       \n        frm.set_value(\"daly_payable\",d_p)\n       \n    },\n    \n    \n    order_no:function(frm) {\n        var num = frm.doc.order_no;\n       \n        frappe.call({\n            method:\"purchase Filter\",\n            args:{\"no\":num },\n        }).then(records=>{\n            var item = records[\"item\"];\n             cur_frm.set_query(\"item_template\", \"items\", function() {\n          \n\t\t        return {\n\t\t\t        filters: {\n\t\t\t            \"item_code\":['in', item]\n\t\t\t        }\n\t\t        }\n\t        });\n        })\n\t},\n\trefresh: function(frm) {\n\t    frm.set_query('item_code', 'items',\n\t\tfunction(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\tfilters: {\n\t\t\t  'variant_of': d.item_template, \n\t\t\t}\n            };\n\t    });\n\t},\n    \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Custom Duty",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.734403",
  "module": "Urjaa",
  "name": "Filter Appliy In Item Template & item Code",
  "script": "frappe.ui.form.on('Custom Duty', {\n\trefresh: function(frm) {\n\t    frm.set_query('item_code', 'items',\n\t\tfunction(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\tfilters: {\n\t\t\t  'variant_of': d.item_template, \n\t\t\t}\n            };\n\t    });\n\t    \n\t    \n\t    \n\t  frm.set_query('purchase_order_no', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\tfilters: {\n\t\t\t  'company': \"URJAA EXIM PRIVATE LIMITED\", \n\t\t\t}\n            \t};\n\t    });\n\n\t    \n\t    \n\t},\n\t\n\tpurchase_order_no:function(frm) {\n        var num = frm.doc.purchase_order_no;\n       \n        frappe.call({\n            method:\"purchase Filter\",\n            args:{\"no\":num },\n        }).then(records=>{\n            var item = records[\"item\"];\n           \n             frm.set_query(\"item_template\", \"items\", function() {\n           \n\t\t        return {\n\t\t\t        filters: {\n\t\t\t            \"item_code\":['in', item]\n\t\t\t           \n\t\t\t        }\n\t\t\t        \n\t\t        }\n\t\t         \n\t        });\n\t       \n        })\n        frm.set_value(\"items\",0)\n        \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2023-02-22 15:53:08.081796",
  "module": "Urjaa",
  "name": "Panding Qty Update base on purchase invoice",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\t\ton_submit:function(frm) {\n\t\tvar PO_No = frm.doc.order_no;\n\t\t\n\t\t   \n    \t\t$.each(frm.doc.items || [], function(i,d){\n    \t\t    \n            \t\t   var item_code = d.item_template;\n            \t\t   var qty = d.qty;\n            \t\t  frm.refresh()\n            \t\t   frappe.call({\n            \t\t      method:'panding qty',\n            \t\t      args:{'pono':PO_No, 'item':item_code, 'qty':qty}\n            \t\t   });\n    \t\t});\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.647211",
  "module": "Urjaa",
  "name": "Custom duty calculation",
  "script": "frappe.ui.form.on('Purchase Invoice', {\nafter_save:function(frm) {\n    \n\tvar name=frm.doc.name\n\tconsole.log(name)\n\t    \n     var total=frm.doc.base_total\n     console.log(total)\n     \n     var duty=frm.doc.daly_payable\n     console.log(duty)\n     \n    \n     var rate= frm.doc.conversion_rate\n     console.log(rate)\n     \n     var new_value=parseFloat(duty)*(1/parseFloat(rate))\n     let n=new_value.toFixed(2);\n     console.log(new_value)\n     cur_frm.set_value('duty_in_usd',n)\n     cur_frm.refresh_field('duty_in_usd')\n     frm.save()\n},\n     \nduty_in_usd:function(frm){\n    var book_selection= frm.doc.book_selection\n    if(book_selection == 'Import'){\n     \n     \n    var value=frm.doc.duty_in_usd\n    let row = frm.add_child('taxes', {\n    charge_type: 'Actual',\n    account_head: 'custome duty - UEPL',\n    tax_amount:value\n    })\n    frm.refresh_field('taxes');\n    }\n}\n    \n});\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2023-02-22 15:53:08.026713",
  "module": "Urjaa",
  "name": "Auto Open Grade Wise Rate Purchase Doctype With All Grade",
  "script": "frappe.ui.form.on('Purchase Order', {\n\tafter_save:function(frm) {\n\t    var status = frm.doc.docstatus;\n\t    var type = frm.doc.book_selection;\n\t   \n\t  \n\t    if(type == \"Purchase Yarn\")\n\t    {\n\t        if(status == 0)\n\t        {\n    \t\t frappe.new_doc(\"Grade Wise Rate Purchase\",\n    \t\t        {\n        \t\t        \"purchase_order_no\":frm.doc.name,\n        \t\t      \n    \t\t        });\n    \t\t      }\n    \t\t  }\n\t},\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Grade Wise Rate Purchase",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.593549",
  "module": "Urjaa",
  "name": "Fatch Grade And Back On Purchase Order",
  "script": "frappe.ui.form.on('Grade Wise Rate Purchase', {\n    onload: function (frm) {\n        var a = frm.doc.purchase_order_no\n        var status = frm.doc.docstatus;\n\n        if (status == 0) {\n            if (a == undefined) {\n            } \n            else {\n                frappe.call({\n                    \"method\": \"Gat Grade\",\n                    args: {\n                        \"name\": a\n                    },\n                }).then(records => {\n                    var all_items = records[\"data1\"]\n                    all_items.forEach(function (item) {\n                        var d = frm.add_child(\"items\");\n                        d.item_grade = item[0];\n                        d.item_template = item[1];\n                        frm.refresh_field(\"items\");\n                    });\n                })\n            }\n        }\n    },\n    on_submit: function (frm) {\n        var name = frm.doc.purchase_order_no;\n        frappe.set_route(\"Form\", \"Purchase Order\", name);\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.997558",
  "module": "Urjaa",
  "name": "Auto crate Doctype as box tracking In Purchase Yarn",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\tafter_save:function(frm) {\n\t    var type = frm.doc.book_selection;\n\t    var status = frm.doc.docstatus;\n\t   \n\t    if(type == \"Purchase Yarn\")\n\t    {\n\t        if(status == 0){\n        \t\tvar pino = frm.doc.name;\n        \t\tvar supplier = frm.doc.supplier;\n        \t\tvar total_qty = frm.doc.total_qty;\n        \t\t\n        \t\t$.each(frm.doc.items || [], function(i,d){\n        \t\t    frappe.call({\n        \t\t        method:'auto make doctye',\n        \t\t        args:{'pi':pino, 'suppl':supplier, 'total_qty':total_qty}\n        \t\t    })\n        \t\t})\n\t        }\n\t    }\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.795013",
  "module": "Urjaa",
  "name": "Get Grade wise rate Base On P.O. And Filter Appliy",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\tsupplier:function(frm) {\n\t\n\t\tvar tyep = frm.doc.book_selection;\n\t\t\n\t\tif(tyep == \"Purchase Yarn\"){\n\t\t\n    \t\tfrm.set_query('order_no', function(doc, cdt, cdn) {\n                let d = locals[cdt][cdn];\n                return{\n    \t\t\tfilters: {\n    \t\t\t  'supplier': frm.doc.supplier, \n    \t\t\t  'company': frm.doc.company,\n    \t\t\t}\n                \t};\n    \t    });\n\t\t}\n\t\telse{\n\t\t    \tfrm.set_query('order_no', function(doc, cdt, cdn) {\n                let d = locals[cdt][cdn];\n                return{\n    \t\t\tfilters: {\n    \t\t\t  'supplier': \"\", \n    \t\t\t   'company': frm.doc.company,\n    \t\t\t}\n                \t};\n    \t    });\n\t\t}\n\n\t\t\n\t},\n\t\n\t company:function(frm){\n    \n    frm.set_query('order_no', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\tfilters: {\n\t\t\t  'company': frm.doc.company, \n\t\t\t  'supplier': frm.doc.supplier,\n\t\t\t}\n            \t};\n\t    });\n    },\n\t\n\t\n\torder_no:function(frm) {\n        if(frm.doc.book_selection == \"Purchase Yarn\")\n        {\n            frappe.call({\n                method:'get data as rate',\n                args:{'name':frm.doc.order_no}\n            }).then (records =>{\n                var all_items = records['all_items'];\n                var child = String(frm.doc.items);\n                if(child!='undefined')\n    \t        {\n    \t            frm.set_value(\"items\",0)\n    \t            all_items.forEach(function (item){\n    \t                var d = frm.add_child(\"items\");\n                        d.item_template = item[0];\n                        d.item_code =  item[1];\n                        d.rate = item[2];\n                        d.item_name = item[1];\n                        frm.refresh_field(\"items\");\n    \t             });\n    \t        }\n    \t        \n    \t         if(child==='undefined')\n    \t         {\n    \t             all_items.forEach(function (item){\n    \t                var d = frm.add_child(\"items\");\n                        d.item_template = item[0];\n                        d.item_code =  item[1];\n                        d.rate = item[2];\n                        d.item_name = item[1];\n                        frm.refresh_field(\"items\");\n    \t             });\n         \n    \t         }\n            })\n        }\n       \n\t},\n\tafter_save:function(frm)\n\t{\n\t   window.location.reload()\n\t}\n\t\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.822945",
  "module": "Urjaa",
  "name": "Filter And Auto open Grade Wise Rate S.O. Doctype",
  "script": "frappe.ui.form.on('Sales Order', {\ncompany: function(frm) {\n        var type = frm.doc.company;\n        if(type == \"URJAA TEXTILE PVT.LTD\")\n        {\n            frm.set_value('items',0)\n\t\tfrm.set_query('item_code', 'items', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n        \n            return{\n    \t\t\tfilters: {\n    \t\t\t  'has_variants': 1,\n    \t\t\t}\n            };\n\t    });\n\t    \n        }\n        else{\n            frm.set_value('items',0)\n            \tfrm.set_query('item_code', 'items', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n        \n            return{\n    \t\t\tfilters: {\n    \t\t\t  'has_variants': 0,\n    \t\t\t  'is_stock_item': 1,\n    \t\t\t}\n            };\n\t    });\n        }\n\t},\n\t\n\n\tafter_save:function(frm) {\n\t    var status = frm.doc.docstatus;\n\t    var type = frm.doc.company;\n\t  \n\t    if(type == \"URJAA TEXTILE PVT.LTD\")\n\t    {\n\t        if(status == 0)\n\t        {\n    \t\t frappe.new_doc(\"Grade Wise Rate Sales\",\n    \t\t        {\n        \t\t        \"sales_order_no\":frm.doc.name,\n        \t\t      \n    \t\t        });\n    \t\t      }\n    \t\t  }\n\t},\n\t\n\t\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Grade Wise Rate Sales",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.563271",
  "module": "Urjaa",
  "name": "Get Grade And Set Rate And Back On S.O.",
  "script": "frappe.ui.form.on('Grade Wise Rate Sales', {\n    onload: function (frm) {\n        var a = frm.doc.sales_order_no\n        var status = frm.doc.docstatus;\n        if (status == 0) {\n            if (a == undefined) {\n            } \n            else {\n                frappe.call({\n                    \"method\": \"get grade in sales\",\n                    args: {\n                        \"name\": a\n                    },\n                }).then(records => {\n                    var all_items = records[\"data1\"]\n                    all_items.forEach(function (item) {\n                        var d = frm.add_child(\"items\");\n                        d.item_grade = item[0];\n                        d.item_template = item[1];\n                        frm.refresh_field(\"items\");\n                    });\n                })\n            }\n        }\n    },\n    on_submit: function (frm) {\n        var name = frm.doc.sales_order_no\n        frappe.set_route(\"Form\", \"Sales Order\", name);\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.938432",
  "module": "Urjaa",
  "name": "Get Grade Wise Rate And All Grade Base On Sales Order",
  "script": "frappe.ui.form.on('Delivery Note', {\n    company:function(frm){\n    \n    frm.set_query('sales_oredr_no', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\tfilters: {\n\t\t\t  'company': frm.doc.company, \n\t\t\t}\n            \t};\n\t    });\n    },\n\n    \n    \n\tsales_oredr_no:function(frm) {\n\t    var a = frm.doc.sales_oredr_no;\n\t    frappe.call({\n\t        method:'get data in delivery',\n\t        args:{'name':a}\n\t    }).then (records =>{\n\t            var all_items = records['all_item'];\n                var child = String(frm.doc.items);\n                \n                if(child!='undefined')\n    \t        {\n    \t            frm.set_value(\"items\",0)\n    \t          \n                    all_items.forEach(function (item){\n    \t                var d = frm.add_child(\"items\");\n                        d.item_template = item[0];\n                        d.item_code =  item[1];\n                         d.item_name = item[1];\n                        d.description = item[1]\n                        d.rate = item[2];\n                        frm.refresh_field(\"items\");\n    \t             });\n    \t        }\n    \t        \n    \t         if(child==='undefined')\n    \t         {\n                    all_items.forEach(function (item){\n    \t                var d = frm.add_child(\"items\");\n                        d.item_template = item[0];\n                        d.item_code =  item[1];\n                         d.item_name = item[1];\n                        d.description = item[1]\n                        d.rate = item[2];\n                        frm.refresh_field(\"items\");\n    \t             });\n    \t         }\n            })\n             \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.912243",
  "module": "Urjaa",
  "name": "Get grade wise box and qty base on P. I. No",
  "script": "frappe.ui.form.on('Delivery Note', {\n\tpurchase_invoice:function(frm) {\n\t\tvar pino = frm.doc.purchase_invoice;\n\t\tfrappe.call({\n\t\t    method:'get box and qty in pi',\n\t\t    args:{'pino':pino}\n\t\t}).then ( records => {\n\t\t   var item = records[\"item_code\"];\n\t\t   var item1 = item.split(\",\");\n\t\t   var len = item1.length;\n\t\t   \n\t\t   var box = records[\"box\"];\n\t\t   var box1 = box.split(\",\");\n\t\t   \n\t\t   var qty = records[\"qty\"];\n\t\t   var qty1 = qty.split(\",\");\n\t\t    \n\t\t   for(var a=0; a<len; a++){\n\t\t      $.each(frm.doc.items || [], function(i,d){\n\t\t          if(d.item_code == item1[a]){\n\t\t              d.box_no = box1[a];\n\t\t              d.qty = qty1[a];\n\t\t              frm.refresh_field(\"items\")\n\t\t          }\n\t\t      })\n\t\t   }\n\t\t      \n\t\t    \n\t\t   \n\t\t});\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.882141",
  "module": "Urjaa",
  "name": "Box And Qty Validation On PI in Delivery Note",
  "script": "frappe.ui.form.on('Delivery Note Item', {\n\tbox_no:function(frm) {\n\t\tvar pi = frm.doc.purchase_invoice;\n\t\t\n\t\t$.each(frm.doc.items || [], function(i,d){\n\t\t    var item = d.item_code;\n\t\t    frappe.call({\n\t\t        method:'validation box',\n\t\t        args:{'pi':pi, 'item':item}\n\t\t    }).then(records => {\n\t\t        var box = records['box']\n\t\t        var box_2 = parseInt(box) \n\t\t        var box1 = d.box_no;\n\t\t        var box_3 = parseInt(box1) \n\t\t        \n\t\t        \n\t\t        if(box_2 < box_3)\n\t\t       {\n\t\t           var a = \"Available box \" + box_2 + \" But You Add This \" + box_3 + \" Box\" + item;\n\t\t           alert(a)\n\t\t          d.box_no = 0;\n\t\t          frm.refresh_field(\"items\")\n\t\t       }\n\t\t       else{\n\t\t           d.box_no = box1\n\t\t       }\n\t\t    });\n\t\t     \n\t\t});\n\t\n\t},\n\t\n\tqty:function(frm) {\n\t\tvar pi = frm.doc.purchase_invoice;\n\t\t\n\t\t$.each(frm.doc.items || [], function(i,d){\n\t\t    var item = d.item_code;\n\t\t    frappe.call({\n\t\t        method:'validation box',\n\t\t        args:{'pi':pi, 'item':item}\n\t\t    }).then(records => {\n\t\t        var qty = records['qty']\n\t\t        var qty_2 = parseInt(qty) \n\t\t        var qty1 = d.qty;\n\t\t        var qty_3 = parseInt(qty1) \n\t\t        \n\t\t        \n\t\t        if(qty_2 < qty_3)\n\t\t       {\n\t\t           var a = \"Available Qty \" + qty_2 + \" But You Add This \" + qty_3 + \" Qty\" + item;\n\t\t           alert(a)\n\t\t          d.qty = 0;\n\t\t          frm.refresh_field(\"items\")\n\t\t       }\n\t\t       else{\n\t\t           d.qty = qty1\n\t\t           frm.refresh_field(\"items\")\n\t\t       }\n\t\t    });\n\t\t     \n\t\t});\n\t\n\t},\n\t\n})\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.852878",
  "module": "Urjaa",
  "name": "Delivery Not Base Qty Box And Total Qty Change In local box tracking",
  "script": "frappe.ui.form.on('Delivery Note', {\n    refresh:function(frm){\n      frm.set_query('purchase_invoice', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            var status = [0,1];\n            return{\n\t\t\tfilters: {\n\t\t\t  'docstatus': ['in', status], \n\t\t\t}\n            \t};\n\t    });\n  \n    },\n\n\ton_submit: function (frm) {\n\t   \n\t     var pi = frm.doc.purchase_invoice;  \n\t      var total_qty = frm.doc.total_qty;\n\t    $.each(frm.doc.items || [], function (i, d) {\n\t         var item = d.item_code;\n\t\t\tvar box = d.box_no;\n            var qty = d.qty\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"changvalueinlocalflow\",\n\t\t\t\targs: {'pi':pi, 'item':item, \"box\": box, \"qty\":qty, \"total_qty\":total_qty }\n\t\t\t});\n\t\t});\n\t    \n\t},\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Local Box Tracking",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.704032",
  "module": "Urjaa",
  "name": "Status Chang Base On Delivery Note",
  "script": "frappe.listview_settings['Local Box Tracking'] = {\n   has_indicator_for_cancelled: true,\n   has_indicator_for_Submitted: true,\n   get_indicator(doc)  {\n     \n       if (doc.docstatus == 2) {\n           return [__(\"Sold\"), \"green\", \"docstatus,=,1\"];\n       }\n       \n   },\n}\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.677942",
  "module": "Urjaa",
  "name": "Custom Duty Link With Purchase Invoice Import Flow",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\tcustom_duty_no:function(frm) {\n\t    \n\t\tvar custon_no = frm.doc.custom_duty_no;\n\t\n\t    frappe.call({\n\t        method:\"custom duty\",\n\t        args:{\"no\":custon_no},\n\t    }).then(records =>{\n\t         var all_items = records['all_items'];\n\t         var child = String(frm.doc.items);\n\t          if(child!='undefined')\n\t         {\n\t            frm.set_value(\"items\",0)\n\t          \n\t             all_items.forEach(function (item){\n    \t                var d = frm.add_child(\"items\");\n                        d.item_template = item[0];\n                        d.item_code =  item[1];\n                        d.qty = item[2];\n                        d.rate = item[3];\n                        d.amount = item[4];\n                        d.approx_cost_i = item[5];\n                        \n                        frm.refresh_field(\"items\");\n    \t             });\n\t              frm.refresh_field(\"total_quantity\");\n\t              frm.refresh_field(\"base_total\");\n\t              frm.refresh_field(\"total\");\n\t           \n\t         }\n\t           if(child==='undefined')\n\t         {\n\t            all_items.forEach(function (item){\n    \t                var d = frm.add_child(\"items\");\n                        d.item_template = item[0];\n                        d.item_code =  item[1];\n                        d.qty = item[2];\n                        d.rate = item[3];\n                        d.amount = item[4];\n                        d.approx_cost_i= item[5];\n                        \n                        frm.refresh_field(\"items\");\n    \t             });\n\t           frm.refresh_field(\"total_quantity\");\n\t              frm.refresh_field(\"base_total\");\n\t              frm.refresh_field(\"total\");\n\t           \n\t         }\n\n\t    })\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 0,
  "modified": "2023-02-22 15:53:07.419529",
  "module": "Urjaa",
  "name": "TDS Calculation",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\ttaxes_and_charges:function(frm) {\n\t   \n\t  var category=frm.doc.tax_withholding_category\n\t    console.log(category)\n\t    if(category !== ''){\n\t        let row = frm.add_child('taxes');\n\t         frm.refresh_field('taxes')\n\t         frm.reload\n            // row.charge_type= 'On Previous Row Total';\n            row.account_head= 'TDS Payable - UTP';\n            // row.add_deduct_tax ='Add'\n           \n            // frm.refresh();\n           \n            \n            \n\t    }\n\t\t// your code here\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2023-02-22 15:53:07.621761",
  "module": "Urjaa",
  "name": "Panding Qty Chang Base On deliver Note In sales Order",
  "script": "frappe.ui.form.on('Delivery Note', {\n\ton_submit:function(frm) {\n    var so_No = frm.doc.sales_oredr_no;\n   \n    $.each(frm.doc.items || [], function(i,d){\n        var item_code = d.item_template;\n        var qty = d.qty;\n        frm.refresh()\n        frappe.call({\n        method:'panding qty in sales order',\n        args:{'sono':so_No, 'item':item_code, 'qty':qty}\n        });\n   });\n\t\n\t},\n})",
  "view": "Form"
 }
]